#
# You should lok at the following URL's in order to grasp a solid understanding of Nginx configuration files in order to fully unleash the power of Nginx. https://www.nginx.com/resources/wiki/start/ 
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/ https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and leave it as reference inside of sites-available where it will continue to be updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other applications, such as Drupal or Wordpress. These applications will be made available underneath a path with that package 
# name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
# Default server configuration
#
worker_processes <По количеству ядер>; 
worker_rlimit_nofile 65536;
#pid /usr/logs/nginx/nginx.pid;

events{
    use epoll;
    worker_connections 2048;
}
http {
    client_max_body_size 400M;
    
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=100M inactive=60m;
    add_header X-Cache $upstream_cache_status;
    proxy_cache_valid 200 302 10m;

    sendfile on;
    upstream ATMMap{
	# ip_hash Балансировка по IP-хэшу (каждое усторйство работает с одним сервером) round-robin Балансировка по-умолчанию не задали ни один из вышеупомянутых способов балансировки - запросы будут 
	# доставляться по очереди на все сервера в равной степени. least_conn Балансировка на сервер с мнимальным с учетом веса hash $request_uri consistent; Сервер, на который пойдет запрос 
	# определяется ключом клиента, который может быть текстом, переменной или их комбинацией. Например, ключ может быть IP адресом и портом клиента или URI
	#
	# По-умолчанию вес каждого сервера в группе одинаков и равен 1. Также по-умолчанию NGINX использует метод балансировки round-robin. Изменим вес одного из серверов группы (определяется 
	# параметром weight)
	#
	server 127.0.0.1:<port> max_fails=2 fail_timeout=2s;	
	keepalive 20;
    }
    
    server  {
        #listen 8080;
        listen 443 ssl;
        ssl_certificate <путь до сертификата>;
        ssl_certificate_key <путь до ключа>;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
        ssl_prefer_server_ciphers on;
		set $resp_body "";
        

	location / {
		 proxy_pass http://ATMMap;
                 proxy_http_version 1.1;
                 proxy_set_header Upgrade $http_upgrade;
                 proxy_set_header Connection keep-alive;
                 proxy_set_header Host $host;
                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                 proxy_set_header X-Forwarded-Proto $scheme;
		}       
    }
     server  {
        listen 8080;
        set $resp_body "";
		location / {
		proxy_pass http://ATMMap;
                 proxy_http_version 1.1;
                 proxy_set_header Upgrade $http_upgrade;
                 proxy_set_header Connection keep-alive;
                 proxy_set_header Host $host;
                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                 proxy_set_header X-Forwarded-Proto $scheme;
		}
	
}
